// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt       @id(map: "users_pkey") @default(autoincrement())
  username   String       @unique(map: "user_username_key")
  email      String       @unique(map: "user_email_key")
  createdAt  DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  password   String
  admin      Boolean
  invitation Invitation[]
  session    Session[]

  @@map("User")
}

model Invitation {
  id        String   @id(map: "invitation_pkey") @default(cuid())
  email     String   @unique(map: "invitaion_email_key")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  invitedBy User     @relation(fields: [userId], references: [id])
  userId    BigInt

  @@map("Invitation")
}

model Session {
  id         BigInt     @id(map: "session_pkey") @default(autoincrement())
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  difficulty String     @default("Easy")
  language   String
  roomId     String
  users      User[]
  responses  Response[]

  @@map("Session")
}

model Response {
  id         BigInt  @id(map: "response_pkey") @default(autoincrement())
  questionId String
  text       Json
  session    Session @relation(fields: [sessionId], references: [id], onDelete: Cascade) // On Session delete, delete all attached Responses
  sessionId  BigInt

  @@map("Response")
}
